#!/usr/bin/env php
<?php

error_reporting(E_ALL & ~E_DEPRECATED & ~E_USER_DEPRECATED);

set_error_handler(static function ($severity, $message, $file, $line) {
    if ($severity & error_reporting()) {
        throw new ErrorException($message, 0, $severity, $file, $line);
    }
});

// check environment requirements
(function () {
    if (\PHP_VERSION_ID < 70400) {
        fwrite(STDERR, "PHP needs to be a minimum version of PHP 7.4.0 and maximum version of PHP 8.2.*.\n");
        fwrite(STDERR, 'Current PHP version: '.PHP_VERSION.".\n");
    }
})();

// load dependencies
(function () {
    // OK, it's not, let give Composer autoloader a try!
    $possibleFiles = [__DIR__ . '/../../autoload.php', __DIR__ . '/../autoload.php', __DIR__ . '/vendor/autoload.php'];
    $file = null;
    foreach ($possibleFiles as $possibleFile) {
        if (file_exists($possibleFile)) {
            $file = $possibleFile;

            break;
        }
    }

    if (null === $file) {
        throw new RuntimeException('Unable to locate autoload.php file.');
    }

    require_once $file;
})();

use LiamH\Valueobjectgenerator\Console\Application;

$application = new Application();

$application->run();

__HALT_COMPILER();